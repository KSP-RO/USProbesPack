PART
{
// --- general parameters ---
name = pam_d
module = Part
author = Raidernick
// --- asset parameters ---
MODEL
	{
	  model = RN_US_Probes/IUS-PAM/pam-d
          scale = 1, 1, 1
	}
//mesh = pam-d.mu
scale = 1
rescaleFactor = 1

// --- node definitions ---
// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z
node_stack_bottom = 0.0, -1.36154, 0.0, 0.0, -1.0, 0.0, 1
node_stack_top = 0.0, 0.21209, 0.0, 0.0, 1.0, 0.0, 1

// --- FX definitions ---

fx_exhaustFlame_yellow = 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, running
fx_exhaustSparks_yellow = 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, running
//fx_smokeTrail_medium = 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, running

// --- Sound FX definition ---


sound_vent_medium = engage
sound_rocket_hard = running
sound_vent_soft = disengage
sound_explosion_low = flameout

// --- editor parameters ---
TechRequired = generalRocketry
entryCost = 200
cost = 422
category = Propulsion
subcategory = 0
title = Magellan Star-48 SRM
manufacturer = RN Industries
description = PAM-D Star-48 SRM for Magellan.

// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 1,0,1,1,1

// --- standard part parameters ---
mass = 0.35
dragModelType = default
maximum_drag = 0.3
minimum_drag = 0.2
angularDrag = 2
crashTolerance = 10
maxTemp = 2000
breakingForce = 2000
breakingTorque = 2000
emissiveConstant = 0.8
stagingIcon = SOLID_BOOSTER

MODULE
{
	name = ModuleEngines
	thrustVectorTransformName = thrustTransform
	throttleLocked = True
	exhaustDamage = True
	ignitionThreshold = 0.1
	minThrust = 0
	maxThrust = 15
	heatProduction = 150
	useEngineResponseTime = True
	engineAccelerationSpeed = 10.0
	allowShutdown = True
	fxOffset = 0, 0, 0
	EngineType = SolidBooster
	PROPELLANT
	{
		name = SolidFuel
        ratio = 1.0
		DrawGauge = True
	}
	atmosphereCurve
 	{
   	 key = 0 240
  	 key = 1 225
 	}
	
}


RESOURCE
{
 name = SolidFuel
 amount = 80
 maxAmount = 80
}

MODULE
{
       name = ModuleJettison
       jettisonName = bars  //separate mesh that appears when something is attached to the node set in the next variable; the mesh detaches when the lower part is staged
       bottomNodeName = bottom      //a part attached to this node will make the fairing mesh visible. must be a stack node
       isFairing = false             //affects Drag when the fairing is on.
       jettisonedObjectMass = 0.01     // mass of the jettisoned mesh as debris 
       jettisonForce = 0            // impulse on the fairing mesh when jettisoned
       jettisonDirection = 0 0 1     //in XYZ format; +Z is same direction as engine thrust, or some other direction you set.
	
}
MODULE
{
       name = ModuleJettison
       jettisonName = bars1
       bottomNodeName = bottom
       isFairing = false
       jettisonedObjectMass = 0.01
       jettisonForce = 0
       jettisonDirection = 0 0 1
	
}
MODULE
{
       name = ModuleJettison
       jettisonName = bars2
       bottomNodeName = bottom
       isFairing = false
       jettisonedObjectMass = 0.01
       jettisonForce = 0
       jettisonDirection = 0 0 1
	
}
MODULE
{
       name = ModuleJettison
       jettisonName = bars3
       bottomNodeName = bottom
       isFairing = false
       jettisonedObjectMass = 0.01
       jettisonForce = 0
       jettisonDirection = 0 0 1
	
}
MODULE
{
       name = ModuleJettison
       jettisonName = cover
       bottomNodeName = bottom
       isFairing = True
       jettisonedObjectMass = 0.01
       jettisonForce = 0
       jettisonDirection = 0 0 1
	
}

MODULE
{
	name = ModuleSurfaceFX
	thrustProviderModuleIndex = 0
	fxMax = 0.6
	maxDistance = 30
	falloff = 1.5
	thrustTransformName = thrustTransform
}

//Reflection shader plugin
    MODULE
    {
        name = ReflectiveShaderModule

        // Lower values for performance, higher values for aesthetics (you shouldn't ever need to go higher than 1024).
        CubeMapSize = 16

        // How deep the reflection will be ("how far the reflection camera will view")
        FarClipPlane = 500000000
		// How far away must something be before it is reflected
		NearClipPlane = .1

        // Set to false to render all 6 faces of the CubeMap at once (six times slower~)
        OneFacePerFrame = true

        // The shader to find. The reflective shaders are:
        // Reflective/Diffuse
        // Reflective/VertexLit
        // Reflective/Bumped Diffuse
		//Reflective/Bumped Specular
        ShaderName = Reflective/Bumped Diffuse
		realTimeReflection = False
		

        // The height of the parallax map. Values are accepted between 0.005 and 0.08.
        ParallaxHeight = 0.01

        // How reflective the reflection will be (Weakest 0.0 - 1.0 Strongest).
        ReflectionStrength = 0.25
		//ReflectionColor = 0, 0, 0, 0

        // Use this variable to specify which meshes to apply the shader to.
        // Not using this variable will default to the first found mesh.
        // Use the actual mesh name for the value. Or you could use:
        // all - to replace the shader on all meshes in the model.
        MeshesToChange = pam_out

        // How shiny the specularity will be (if specular).
        // This value will be automatically set if it already exists on the previous shader and is not defined here.
        Shininess = 1.0
		updateRate = 130

        // These variables should be used together only.
        // These values will be automatically set if they already exist on the previous shader and are not defined here
        SpecColorR = 0.8
        SpecColorG = 0.8
        SpecColorB = 0.8
        SpecColorA = 0.8
		rimFalloff = 5.0
		rimColor = 0.8242, 0.6445, 0.1914, 1.0
		ReflectionColor = 0.6242, 0.6445, 0.69, 1.0
    }
}
