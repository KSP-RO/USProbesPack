PART
{
// --- general parameters ---
name = rn_huygen_hs_bottom
module = Part
author = Raidernick

MODEL
	{
	  model = RN_US_Probes/Cassini/huygen_hs_bottom
          scale = 0.80, 0.80, 0.80
	}


scale = 0.80
rescaleFactor = 1


// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z
//node_stack_bottom = 0.0, 0.14965, 0.0, 0.0, -1.0, 0.0, 0
node_stack_top = 0.0, -0.33861, 0.0, 0.0, 1.0, 0.0, 0
	
fx_gasBurst_white = 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, decouple
sound_decoupler_fire = decouple

cost = 200
category = Structural
subcategory = 0
TechRequired = start
entryCost = 200
title = Huygens Heatshield Bottom
manufacturer = RN Industries
description = Bottom part of the 2 heatshield pieces for Cassini Huygens lander.

// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 1,0,1,1,0

mass = 0.09
dragModelType = default
maximum_drag = 0.2
minimum_drag = 0.1
angularDrag = 2
crashTolerance = 20000
breakingForce = 200000
breakingTorque = 50000
linearStrength = 22000
angularStrength = 22000
CoPOffset = 0.0, 0.1, 0.0
CoLOffset = 0.0, -0.24393, 0.0
maxTemp = 4800

fuelCrossFeed = False

	
		MODULE
	{
		name = ModuleAblator
		ablativeResource = Ablator
		lossExp = -9000
		lossConst = 1.5
		pyrolysisLossFactor = 20000
		reentryConductivity = 0.01
		ablationTempThresh = 2500

	}
	RESOURCE
	{
		name = Ablator
		amount = 100
		maxAmount = 100
	}	

	MODULE
	{
	    name = ModuleDecouple
	    ejectionForce = 5
	    explosiveNodeID = top
		isOmniDecoupler = false
	    staged = true
	}
	
	//Reflection shader plugin
    MODULE
    {
        name = ReflectiveShaderModule

        // Lower values for performance, higher values for aesthetics (you shouldn't ever need to go higher than 1024).
        CubeMapSize = 16

        // How deep the reflection will be ("how far the reflection camera will view")
        FarClipPlane = 500000000
		// How far away must something be before it is reflected
		NearClipPlane = .1

        // Set to false to render all 6 faces of the CubeMap at once (six times slower~)
        OneFacePerFrame = true

        // The shader to find. The reflective shaders are:
        // Reflective/Diffuse
        // Reflective/VertexLit
        // Reflective/Bumped Diffuse
		//Reflective/Bumped Specular
        ShaderName = Reflective/Bumped Diffuse
		realTimeReflection = False
		

        // The height of the parallax map. Values are accepted between 0.005 and 0.08.
        ParallaxHeight = 0.01

        // How reflective the reflection will be (Weakest 0.0 - 1.0 Strongest).
        ReflectionStrength = 0.25
		//ReflectionColor = 0, 0, 0, 0

        // Use this variable to specify which meshes to apply the shader to.
        // Not using this variable will default to the first found mesh.
        // Use the actual mesh name for the value. Or you could use:
        // all - to replace the shader on all meshes in the model.
        MeshesToChange = ht_bot

        // How shiny the specularity will be (if specular).
        // This value will be automatically set if it already exists on the previous shader and is not defined here.
        Shininess = 1.0
		updateRate = 130

        // These variables should be used together only.
        // These values will be automatically set if they already exist on the previous shader and are not defined here
        SpecColorR = 0.8
        SpecColorG = 0.8
        SpecColorB = 0.8
        SpecColorA = 0.8
		rimFalloff = 5.0
		rimColor = 0.8242, 0.6445, 0.1914, 1.0
		ReflectionColor = 0.6242, 0.6445, 0.69, 1.0
    }
}