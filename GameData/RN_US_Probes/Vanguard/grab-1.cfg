PART
{
// --- general parameters ---
name = grab-1
module = Part
author = Raidernick

// --- asset parameters ---
MODEL
	{
	  model = RN_US_Probes/Vanguard/grab-1
          scale = 0.80, 0.80, 0.80
	}
//mesh = grab-1.mu
scale = 0.80
rescaleFactor = 1
// --- node definitions ---
// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z

node_stack_bottom = 0.0, -0.27248, 0.0, 0.0, -1.0, 0.0, 0

// --- editor parameters ---
TechRequired = engineering101
entryCost = 500
cost = 250
category = Pods
subcategory = 0
title = GRAB 1
manufacturer = RN Industries
description = United States reconnaissance satellite GRAB 1
attachRules = 1,0,1,1,0

// --- standard part parameters ---
mass = 0.018
dragModelType = default
maximum_drag = 0.1
minimum_drag = 0.05
angularDrag = 2
crashTolerance = 50
maxTemp = 2000
breakingForce = 2000
breakingTorque = 2000

CrewCapacity = 0
vesselType = Probe
stagingIcon = COMMAND_POD
MODULE
{
 name = ModuleCommand
 minimumCrew = 0
	RESOURCE
	{
		name = ElectricCharge
		rate = 0.0006
	}
}
MODULE
{
	name = ModuleReactionWheel
	
	PitchTorque = 0.1
	YawTorque = 0.1
	RollTorque = 0.1
	
	RESOURCE
	{
		name = ElectricCharge
		rate = 0.001
	}
}
MODULE
{
	name = ModuleSAS
}


// --- Electric parameters ---
RESOURCE
{
	name = ElectricCharge
	amount = 150
	maxAmount = 150
}

// --- Science ---
MODULE
{
	name = ModuleScienceExperiment	
	
	experimentID = crewReport
	
	experimentActionName = Probe Report
	resetActionName = Discard Probe Report
	reviewActionName = Review Report
	
	useStaging = False	
	useActionGroups = True
	hideUIwhenUnavailable = True	
	rerunnable = True
	
	xmitDataScalar = 1.0
}

// --- Antenna parameters ---
MODULE
	{
		name = ModuleDataTransmitter
		antennaType = DIRECT
		packetInterval = 0.18
		packetSize = 2
		packetResourceCost = 0.001
		requiredResource = ElectricCharge
		antennaPower = 500000
	}

MODULE
{
	name = ModuleDeployableSolarPanel

	sunTracking = true

	raycastTransformName = suncatcher
	pivotName = suncatcher

	isBreakable = false

	resourceName = ElectricCharge

	chargeRate = 0.1

	powerCurve
 	{
		key = 206000000000 0 0 0
		key = 13599840256 1 0 0
		key = 68773560320 0.5 0 0
		key = 0 10 0 0
 	}
}

MODULE
{
    name = ModuleDecouple
    ejectionForce = 2
	explosiveNodeID = bottom
}

// --- Animation ---
MODULE
{
	name = ModuleAnimateGeneric
	animationName = Deploy
	startEventGUIName = Extend Antennae
	endEventGUIName = Retract Antennae
	actionGUIName = Toggle Antennae
}

	DRAG_CUBE
	{
		cube = A, 0.129,0.6841,0.5821, 0.129,0.6835,0.5821, 0.1446,0.6747,0.3277, 0.1446,0.6628,0.3423, 0.1362,0.6528,0.6139, 0.1362,0.6524,0.6139, 0,-0.006221,-2.98E-08, 0.9596,0.4235,0.9596
		cube = B, 0.1296,0.6933,0.3003, 0.1296,0.6928,0.3003, 0.1303,0.6485,0.5773, 0.1303,0.6461,0.3416, 0.1364,0.6629,0.3401, 0.1364,0.6644,0.3401, 0,0.1176,0, 0.4031,0.6711,0.4108
	}

//Reflection shader plugin
    MODULE
    {
        name = ReflectiveShaderModule

        // Lower values for performance, higher values for aesthetics (you shouldn't ever need to go higher than 1024).
        CubeMapSize = 16

        // How deep the reflection will be ("how far the reflection camera will view")
        FarClipPlane = 500000000
		// How far away must something be before it is reflected
		NearClipPlane = .1

        // Set to false to render all 6 faces of the CubeMap at once (six times slower~)
        OneFacePerFrame = true

        // The shader to find. The reflective shaders are:
        // Reflective/Diffuse
        // Reflective/VertexLit
        // Reflective/Bumped Diffuse
		//Reflective/Bumped Specular
        ShaderName = Reflective/Bumped Diffuse
		realTimeReflection = False
		

        // The height of the parallax map. Values are accepted between 0.005 and 0.08.
        ParallaxHeight = 0.01

        // How reflective the reflection will be (Weakest 0.0 - 1.0 Strongest).
        ReflectionStrength = 0.50
		//ReflectionColor = 0, 0, 0, 0

        // Use this variable to specify which meshes to apply the shader to.
        // Not using this variable will default to the first found mesh.
        // Use the actual mesh name for the value. Or you could use:
        // all - to replace the shader on all meshes in the model.
        MeshesToChange = ant1,ant2,ant3,ant4,bolts,mb,antbase,cyls,inst

        // How shiny the specularity will be (if specular).
        // This value will be automatically set if it already exists on the previous shader and is not defined here.
        Shininess = 1.0
		updateRate = 130

        // These variables should be used together only.
        // These values will be automatically set if they already exist on the previous shader and are not defined here
        SpecColorR = 0.8
        SpecColorG = 0.8
        SpecColorB = 0.8
        SpecColorA = 0.8
		rimFalloff = 5.0
		rimColor = 0.8242, 0.6445, 0.1914, 1.0
		ReflectionColor = 0.6242, 0.6445, 0.69, 1.0
    }

}
